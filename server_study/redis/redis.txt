redis란 : Remote Dictionary Server 
캐시 또는 메시지 브로커로 사용할 수 있는 인메모리 DB(메모리에 데이터를 저장), 무료이며 오픈소스
Key: value로 값을 저장하는 NoSQL

메시지 브로커 -
Publisher(송신자) ->  메시지 브로커[message Queue{Topic(메시지의 그룹)}] -> Subscriber(수신자)
이러한 개념적인 역할

기존의 데이터들 DB에 저장하고 데이터를 가공하기 위해서 DB에 접근해야하는 기존의 구조에서
데이터를 메시지 브로커에 저장하고 가공자는 메시지 브로커를 감시하다가 변형이 일어나면 그 데이터를 바로 가공하는 구조로 변환
-> 이러한 구조를 Publisher/Subscriber(pub/sub) Pattern 또는 Producer/Consumer Pattern 이라고 한다

실시간 데이터를 처리할 때 DB를 조회하는 것 보다 성능이 뛰어나다. 
하지만 DB처럼 필터링해 조회하는게 불가능 해 Queue에 적제된 그대로 사용해야한다.
따라서 적제할 때 필터링해 적제하든 적제된 데이터를 *Logstash를 아용해 필터링해 사용해야 한다.        ;;; Logstash - 데이터를 수집, 수정 후 원하는 대상에 전송할 수 있게 하는 경량의 오픈소스 서버측 데이터 처리 파이프 라인
또한 메시지 큐의 메시지는 7일간 저장하기 떄문에 장기간 보관이 필요할 때는 별도의 저장소에 저장해야한다.