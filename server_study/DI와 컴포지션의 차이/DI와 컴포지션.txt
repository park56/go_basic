DI(Dipendency Injection)
    의존성 주입. 
    객체간의 관계를 외부에서 주입해주는 방식. 
    주로 생성자 주입, 메서드 주입, 프로퍼티 주입 등의 방식을 사용.

    특징
        객체간 결합도 낮춤 -> 유연성과 확장성 증가
        객체간 의존성이 명확해져 코드 가독성을 높임
        테스트가 용이해짐

Composition
    컴포지션(구성)
    객체 간의 관계를 객체내에 다른 객체를 변수로써 포함시켜 구현.

    특징
        작은 구성요소들을 조합해 더 큰 기능을 구현.
        has-a 관계
        객체간의 의존성이 내부에서 처리됨.

차이점

    DI는 객체간의 관계를 외부에서 주입해 유연성, 재사용성을 향상시킨다.
    컴포지션은 작은 요소들을 조합해 객체간의 관계를 내부에서 구현한다.