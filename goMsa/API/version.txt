API 버전 관리 -- 
    주요 변경사항(버전 번호를 증가시키는 경우) -
        API나 API 매개 변수의 제거 또는 이름 변경
        API 매개 변수의 타입 변경
        응답 코드, 에러 코드 또는 실패 규약의 변경
        기존 API의 동작 변경
    주요 변경사항X - 
        리턴되는 엔티티에 매개 변수 추가
        새로운 엔드 포인트나 기능의 추가
        버그 수정 또는 주요 변경사항 목록에 포함되지 않는 기타 유지 관리
    

시멘틱 버전 관리 --
    메이저 버전 관리 체계는 마이크로서비스에서 반드시 구현해야한다.
    대부분의 설계자는 시멘틱 버전 원칙에 따라 메이저 버전 번호만 구현한다(마이너 버전은 묵시적으로 0) 마이너 버전은 이전 버전과 호환되도록 구현된 기능의 추가를 나타낸다. 이러한 기능은 필요 없을 수 있으므로 메이저 버전만 고려한다.
    이러한 원칙을 지키면 API 버전에 일어난 변화가 중요한지 클라이언트의 기능에 영향을 끼치는 지 아닌지를 구분할 수 있다.

REST API의 버전 관리 형식 --
    클라이언트가 특정 API버전을 요청하는 일반적인 방법중 3가지.
    어떻게 관리를 할지는 개발자의 아이디어에 따라 달라진다. 깊게 고민해 좋은 아이디어를 내보자.

        URI의 일부로 요청 -
            https://myserver.com/v1/helloworld
        쿼리 문자열의 매개변수로 요청 -
            https://myserver.com/helloworld?api-version=1
        사용자 정의 HTTP 헤더를 사용해 요청 -
            GET https://myserver.com/helloworld api-version: 2
            

    